<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.4.4</version>
    <relativePath/>
  </parent>
  <groupId>com.ticketsystem.clients</groupId>
  <artifactId>client-open-feign</artifactId>
  <version>0.1.0</version>
  <name>client-open-feign</name>
  <packaging>jar</packaging>
  <properties>
    <java.version>17</java.version>
    <openapi.generator.version>7.12.0</openapi.generator.version>
    <spring-cloud.version>2024.0.1</spring-cloud.version>
    <!-- Keycloak -->
    <keycloak.token.url>https://keycloak.appf4s.io.vn/realms/jhipster/protocol/openid-connect/token</keycloak.token.url>
    <keycloak.clientId>web_app</keycloak.clientId>
    <keycloak.username>${env.KEYCLOAK_USERNAME}</keycloak.username>
    <keycloak.password>${env.KEYCLOAK_PASSWORD}</keycloak.password>
    <!-- Consul + Gateway -->
    <consul.url>https://consul.appf4s.io.vn</consul.url>
    <gateway.url>https://gateway.microservices.appf4s.io.vn</gateway.url>
    <!-- Auth/token + multi-service OpenAPI cache -->
    <openapi.auth.file>${project.build.directory}/openapi-auth.properties</openapi.auth.file>
    <openapi.dir>${project.build.directory}/openapi</openapi.dir>
    <openapi.generated.dir>${project.build.directory}/generated-sources</openapi.generated.dir>
    <!-- Only generate clients for services that match this regex -->
    <service.name.pattern>^ms*</service.name.pattern>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <!-- OpenFeign -->
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-openfeign</artifactId>
    </dependency>
    <!-- Swagger/OpenAPI annotations (optional at compile time) -->
    <dependency>
      <groupId>io.swagger.core.v3</groupId>
      <artifactId>swagger-annotations</artifactId>
      <version>2.2.22</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.openapitools</groupId>
      <artifactId>jackson-databind-nullable</artifactId>
      <version>0.2.6</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <!-- 1) Get Keycloak token early (validate) so it's available for subsequent steps -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>3.5.0</version>
        <executions>
          <execution>
            <id>fetch-token</id>
            <phase>validate</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>bash</executable>
              <arguments>
                <argument>${project.basedir}/scripts/fetch-token.sh</argument>
                <argument>${keycloak.token.url}</argument>
                <argument>${keycloak.clientId}</argument>
                <argument>${keycloak.username}</argument>
                <argument>${keycloak.password}</argument>
                <argument>${openapi.auth.file}</argument>
              </arguments>
            </configuration>
          </execution>
          <!-- 2) Discover all services from Consul & download all OpenAPI specs (via gateway by default) -->
          <execution>
            <id>download-all-openapis</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>bash</executable>
              <arguments>
                <argument>${project.basedir}/scripts/consul-download-openapis.sh</argument>
                <argument>${openapi.auth.file}</argument>
                <argument>${consul.url}</argument>
                <argument>${gateway.url}</argument>
                <argument>${openapi.dir}</argument>
                <argument>${service.name.pattern}</argument>
                <!-- Switch this to 'direct' to fetch from instances instead of gateway -->
                <argument>gateway</argument>
              </arguments>
            </configuration>
          </execution>
          <!-- 3) Generate clients for every downloaded spec -->
          <execution>
            <id>generate-all-clients</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>bash</executable>
              <arguments>
                <argument>${project.basedir}/scripts/generate-clients.sh</argument>
                <argument>${openapi.dir}</argument>
                <argument>${openapi.generated.dir}</argument>
                <argument>${openapi.generator.version}</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- 4) Load the token property so ${access.token} is available if needed -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>1.2.1</version>
        <executions>
          <execution>
            <id>load-token</id>
            <phase>initialize</phase>
            <goals>
              <goal>read-project-properties</goal>
            </goals>
            <configuration>
              <files>
                <file>${openapi.auth.file}</file>
              </files>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- 5) Add ALL generated sources (recursive) to the project -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.5.0</version>
        <executions>
          <execution>
            <id>add-all-generated-sources</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${openapi.generated.dir}</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>