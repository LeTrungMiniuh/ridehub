package com.ticketsystem.route.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OperatorAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOperatorAllPropertiesEquals(Operator expected, Operator actual) {
        assertOperatorAutoGeneratedPropertiesEquals(expected, actual);
        assertOperatorAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOperatorAllUpdatablePropertiesEquals(Operator expected, Operator actual) {
        assertOperatorUpdatableFieldsEquals(expected, actual);
        assertOperatorUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOperatorAutoGeneratedPropertiesEquals(Operator expected, Operator actual) {
        assertThat(actual)
            .as("Verify Operator auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOperatorUpdatableFieldsEquals(Operator expected, Operator actual) {
        assertThat(actual)
            .as("Verify Operator relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getBusinessLicense()).as("check businessLicense").isEqualTo(expected.getBusinessLicense()))
            .satisfies(a -> assertThat(a.getLogoUrl()).as("check logoUrl").isEqualTo(expected.getLogoUrl()))
            .satisfies(a -> assertThat(a.getRating()).as("check rating").isEqualTo(expected.getRating()))
            .satisfies(a -> assertThat(a.getContactPhone()).as("check contactPhone").isEqualTo(expected.getContactPhone()))
            .satisfies(a -> assertThat(a.getContactEmail()).as("check contactEmail").isEqualTo(expected.getContactEmail()))
            .satisfies(a -> assertThat(a.getIsActive()).as("check isActive").isEqualTo(expected.getIsActive()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOperatorUpdatableRelationshipsEquals(Operator expected, Operator actual) {
        // empty method
    }
}
