package com.ticketsystem.route.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DistrictAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDistrictAllPropertiesEquals(District expected, District actual) {
        assertDistrictAutoGeneratedPropertiesEquals(expected, actual);
        assertDistrictAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDistrictAllUpdatablePropertiesEquals(District expected, District actual) {
        assertDistrictUpdatableFieldsEquals(expected, actual);
        assertDistrictUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDistrictAutoGeneratedPropertiesEquals(District expected, District actual) {
        assertThat(actual)
            .as("Verify District auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDistrictUpdatableFieldsEquals(District expected, District actual) {
        assertThat(actual)
            .as("Verify District relevant properties")
            .satisfies(a -> assertThat(a.getCode()).as("check code").isEqualTo(expected.getCode()))
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getNameEn()).as("check nameEn").isEqualTo(expected.getNameEn()))
            .satisfies(a -> assertThat(a.getType()).as("check type").isEqualTo(expected.getType()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDistrictUpdatableRelationshipsEquals(District expected, District actual) {
        assertThat(actual)
            .as("Verify District relationships")
            .satisfies(a -> assertThat(a.getProvince()).as("check province").isEqualTo(expected.getProvince()));
    }
}
