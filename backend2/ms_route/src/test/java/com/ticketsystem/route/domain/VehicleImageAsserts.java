package com.ticketsystem.route.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class VehicleImageAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleImageAllPropertiesEquals(VehicleImage expected, VehicleImage actual) {
        assertVehicleImageAutoGeneratedPropertiesEquals(expected, actual);
        assertVehicleImageAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleImageAllUpdatablePropertiesEquals(VehicleImage expected, VehicleImage actual) {
        assertVehicleImageUpdatableFieldsEquals(expected, actual);
        assertVehicleImageUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleImageAutoGeneratedPropertiesEquals(VehicleImage expected, VehicleImage actual) {
        assertThat(actual)
            .as("Verify VehicleImage auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleImageUpdatableFieldsEquals(VehicleImage expected, VehicleImage actual) {
        assertThat(actual)
            .as("Verify VehicleImage relevant properties")
            .satisfies(a -> assertThat(a.getImageUrl()).as("check imageUrl").isEqualTo(expected.getImageUrl()))
            .satisfies(a -> assertThat(a.getImageType()).as("check imageType").isEqualTo(expected.getImageType()))
            .satisfies(a -> assertThat(a.getDescription()).as("check description").isEqualTo(expected.getDescription()))
            .satisfies(a -> assertThat(a.getIsPrimary()).as("check isPrimary").isEqualTo(expected.getIsPrimary()))
            .satisfies(a -> assertThat(a.getUploadedAt()).as("check uploadedAt").isEqualTo(expected.getUploadedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleImageUpdatableRelationshipsEquals(VehicleImage expected, VehicleImage actual) {
        assertThat(actual)
            .as("Verify VehicleImage relationships")
            .satisfies(a -> assertThat(a.getVehicle()).as("check vehicle").isEqualTo(expected.getVehicle()));
    }
}
