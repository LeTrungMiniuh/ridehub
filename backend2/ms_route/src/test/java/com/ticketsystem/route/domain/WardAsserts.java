package com.ticketsystem.route.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class WardAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWardAllPropertiesEquals(Ward expected, Ward actual) {
        assertWardAutoGeneratedPropertiesEquals(expected, actual);
        assertWardAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWardAllUpdatablePropertiesEquals(Ward expected, Ward actual) {
        assertWardUpdatableFieldsEquals(expected, actual);
        assertWardUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWardAutoGeneratedPropertiesEquals(Ward expected, Ward actual) {
        assertThat(actual)
            .as("Verify Ward auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWardUpdatableFieldsEquals(Ward expected, Ward actual) {
        assertThat(actual)
            .as("Verify Ward relevant properties")
            .satisfies(a -> assertThat(a.getCode()).as("check code").isEqualTo(expected.getCode()))
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getNameEn()).as("check nameEn").isEqualTo(expected.getNameEn()))
            .satisfies(a -> assertThat(a.getType()).as("check type").isEqualTo(expected.getType()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWardUpdatableRelationshipsEquals(Ward expected, Ward actual) {
        assertThat(actual)
            .as("Verify Ward relationships")
            .satisfies(a -> assertThat(a.getDistrict()).as("check district").isEqualTo(expected.getDistrict()));
    }
}
