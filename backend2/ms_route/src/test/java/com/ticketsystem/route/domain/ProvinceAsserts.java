package com.ticketsystem.route.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ProvinceAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProvinceAllPropertiesEquals(Province expected, Province actual) {
        assertProvinceAutoGeneratedPropertiesEquals(expected, actual);
        assertProvinceAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProvinceAllUpdatablePropertiesEquals(Province expected, Province actual) {
        assertProvinceUpdatableFieldsEquals(expected, actual);
        assertProvinceUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProvinceAutoGeneratedPropertiesEquals(Province expected, Province actual) {
        assertThat(actual)
            .as("Verify Province auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProvinceUpdatableFieldsEquals(Province expected, Province actual) {
        assertThat(actual)
            .as("Verify Province relevant properties")
            .satisfies(a -> assertThat(a.getCode()).as("check code").isEqualTo(expected.getCode()))
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getNameEn()).as("check nameEn").isEqualTo(expected.getNameEn()))
            .satisfies(a -> assertThat(a.getRegion()).as("check region").isEqualTo(expected.getRegion()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertProvinceUpdatableRelationshipsEquals(Province expected, Province actual) {
        // empty method
    }
}
