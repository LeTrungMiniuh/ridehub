package com.ticketsystem.route.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class StationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStationAllPropertiesEquals(Station expected, Station actual) {
        assertStationAutoGeneratedPropertiesEquals(expected, actual);
        assertStationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStationAllUpdatablePropertiesEquals(Station expected, Station actual) {
        assertStationUpdatableFieldsEquals(expected, actual);
        assertStationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStationAutoGeneratedPropertiesEquals(Station expected, Station actual) {
        assertThat(actual)
            .as("Verify Station auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStationUpdatableFieldsEquals(Station expected, Station actual) {
        assertThat(actual)
            .as("Verify Station relevant properties")
            .satisfies(a -> assertThat(a.getCode()).as("check code").isEqualTo(expected.getCode()))
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getNameEn()).as("check nameEn").isEqualTo(expected.getNameEn()))
            .satisfies(a -> assertThat(a.getAddressId()).as("check addressId").isEqualTo(expected.getAddressId()))
            .satisfies(a -> assertThat(a.getFacilities()).as("check facilities").isEqualTo(expected.getFacilities()))
            .satisfies(a -> assertThat(a.getOperatingHours()).as("check operatingHours").isEqualTo(expected.getOperatingHours()))
            .satisfies(a -> assertThat(a.getIsActive()).as("check isActive").isEqualTo(expected.getIsActive()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStationUpdatableRelationshipsEquals(Station expected, Station actual) {
        // empty method
    }
}
