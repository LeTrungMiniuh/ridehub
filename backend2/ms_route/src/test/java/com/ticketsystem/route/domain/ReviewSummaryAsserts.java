package com.ticketsystem.route.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ReviewSummaryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReviewSummaryAllPropertiesEquals(ReviewSummary expected, ReviewSummary actual) {
        assertReviewSummaryAutoGeneratedPropertiesEquals(expected, actual);
        assertReviewSummaryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReviewSummaryAllUpdatablePropertiesEquals(ReviewSummary expected, ReviewSummary actual) {
        assertReviewSummaryUpdatableFieldsEquals(expected, actual);
        assertReviewSummaryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReviewSummaryAutoGeneratedPropertiesEquals(ReviewSummary expected, ReviewSummary actual) {
        assertThat(actual)
            .as("Verify ReviewSummary auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReviewSummaryUpdatableFieldsEquals(ReviewSummary expected, ReviewSummary actual) {
        assertThat(actual)
            .as("Verify ReviewSummary relevant properties")
            .satisfies(a -> assertThat(a.getAverageRating()).as("check averageRating").isEqualTo(expected.getAverageRating()))
            .satisfies(a -> assertThat(a.getTotalReviews()).as("check totalReviews").isEqualTo(expected.getTotalReviews()))
            .satisfies(a -> assertThat(a.getUpdatedAt()).as("check updatedAt").isEqualTo(expected.getUpdatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReviewSummaryUpdatableRelationshipsEquals(ReviewSummary expected, ReviewSummary actual) {
        // empty method
    }
}
